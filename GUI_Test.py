# -*- coding: utf-8 -*-
import configparser

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys, qdarkstyle, os
from colorama import Fore
from PyQt5.QtCore import QFile, QTextStream
from PyQt5.QtWidgets import QMessageBox



class Ui_MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super(Ui_MainWindow, self).__init__()
        self.wep_list = []
        self.wpa_list = []
        self.tp_link_list = []
        self.o2_list = []
        self.conf = configparser.ConfigParser()
        self.variables()
        self.setupUi(self)


    def clear_lists(self):
        self.cleared_o2_list = []
        self.cleared_tp_link_list = []
        self.cleared_wep_list = []
        self.cleared_wpa_list = []

        for line in self.wep_list:
            values = line.strip().split(",")
            name = values[1]

            if name not in self.cleared_wep_list:
                self.cleared_wep_list.append(name)

        for line in self.o2_list:
            values = line.strip().split(",")
            name = values[1]

            if name not in self.cleared_o2_list:
                self.cleared_o2_list.append(name)

        for line in self.tp_link_list:
            values = line.strip().split(",")
            name = values[1]

            if name not in self.cleared_tp_link_list:
                self.cleared_tp_link_list.append(name)

        for line in self.wpa_list:
            values = line.strip().split(",")
            name = values[1]

            if name not in self.cleared_wpa_list:
                self.cleared_wpa_list.append(name)

    def variables(self):

        if self.conf['WPS']['tp_link'] == 'true':
            self.wps_tp_link = True
            self.wps_tp_link_ext = Fore.LIGHTGREEN_EX + "Enabled"

        elif self.conf['WPS']['tp_link'] == 'false':
            self.wps_tp_link = False
            self.wps_tp_link_ext = Fore.LIGHTRED_EX + "Disabled"

        if self.conf['WPS']['o2'] == 'true':
            self.wps_o2 = True
            self.wps_o2_ext = Fore.LIGHTGREEN_EX + "Enabled"

        elif self.conf['WPS']['o2'] == 'false':
            self.wps_o2 = False
            self.wps_o2_ext = Fore.LIGHTRED_EX + "Disabled"

        if self.conf['WPA']['tkip'] == 'true':
            self.wpa = True
            self.wpa_ext = Fore.LIGHTGREEN_EX + "Enabled"

        elif self.conf['WPA']['tkip'] == 'false':
            self.wpa = False
            self.wpa_ext = Fore.LIGHTRED_EX + "Disabled"

        if self.conf['WEP']['wep'] == 'true':
            self.wep = True
            self.wep_ext = Fore.LIGHTGREEN_EX + "Enabled"

        elif self.conf['WEP']['wep'] == 'false':
            self.wep = False
            self.wep_ext = Fore.LIGHTRED_EX + "Disabled"

        else:
            print("Variables not loaded.")

    def vulnerability_search(self):

        with open(self.csv_path, 'r', encoding="utf-8", errors="replace") as csv_file:
            print(Fore.LIGHTGREEN_EX + "[+] " + Fore.LIGHTCYAN_EX + "Analyzing data....")
            text = csv_file.read().splitlines()
            for line in text:
                if ",," in str(line):
                    pass

                if self.wep:

                    if "WEP" and ",," in str(line):
                        pass

                    elif "WEP" in str(line):
                        self.wep_list.append(line)

                if self.wps_o2:

                    if "o2-WLAN" in str(line):
                        self.o2_list.append(line)

                if self.wps_tp_link:
                    if "tp-link" in str(line):
                        self.tp_link_list.append(line)

                    elif "TP-Link" in str(line):
                        self.tp_link_list.append(line)

                if self.wpa:
                    if "WPA-PSK-TKIP" and "WPA2" in str(line):
                        pass

                    elif "WPA-PSK-TKIP" in str(line):
                        self.wpa_list.append(line)

    def clear_lists(self):
        self.cleared_wep_list = {}
        self.cleared_o2_list = {}
        self.cleared_tp_link_list = {}
        self.cleared_wpa_list = {}

        for item in self.wep_list:
            values = item.split(",")
            mac = values[0]
            if mac not in self.cleared_wep_list:
                self.cleared_wep_list[mac] = values

            else:
                pass

        for item in self.o2_list:
            values = item.split(",")
            mac = values[0]
            if mac not in self.cleared_o2_list:
                self.cleared_o2_list[mac] = values

            else:
                pass

        for item in self.tp_link_list:
            values = item.split(",")
            mac = values[0]
            if mac not in self.cleared_tp_link_list:
                self.cleared_tp_link_list[mac] = values

            else:
                pass

        for item in self.wpa_list:
            values = item.split(",")
            mac = values[0]
            if mac not in self.cleared_wpa_list:
                self.cleared_wpa_list[mac] = values

            else:
                pass

    def get_results(self):

        self.clear_lists()
        self.wep_length = len(self.cleared_wep_list)
        self.o2_length = len(self.cleared_o2_list)
        self.tp_link_length = len(self.cleared_tp_link_list)
        self.wpa_length = len(self.cleared_wpa_list)
        self.all_length = self.wep_length + self.o2_length + self.tp_link_length + self.wpa_length


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1920, 1080)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(440, 60, 941, 31))
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        self.push_scan = QtWidgets.QPushButton(self.centralwidget)
        self.push_scan.setGeometry(QtCore.QRect(920, 0, 121, 61))
        self.push_scan.setObjectName("push_scan")
        self.push_settings = QtWidgets.QPushButton(self.centralwidget)
        self.push_settings.setGeometry(QtCore.QRect(1040, 0, 121, 61))
        self.push_settings.setObjectName("push_settings")
        self.push_info = QtWidgets.QPushButton(self.centralwidget)
        self.push_info.setGeometry(QtCore.QRect(1160, 0, 111, 61))
        self.push_info.setObjectName("push_info")
        self.push_exit = QtWidgets.QPushButton(self.centralwidget)
        self.push_exit.setGeometry(QtCore.QRect(1270, 0, 111, 61))
        self.push_exit.setObjectName("push_exit")
        self.WEP_Scroll_Area = QtWidgets.QScrollArea(self.centralwidget)
        self.WEP_Scroll_Area.setGeometry(QtCore.QRect(10, 190, 991, 141))
        self.WEP_Scroll_Area.setWidgetResizable(True)
        self.WEP_Scroll_Area.setObjectName("WEP_Scroll_Area")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 989, 139))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.WEP_Scroll_Area.setWidget(self.scrollAreaWidgetContents)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(370, 100, 321, 41))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(60, 150, 161, 41))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(280, 160, 71, 19))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(510, 160, 66, 19))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(740, 160, 66, 19))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(270, 430, 71, 19))
        self.label_7.setObjectName("label_7")
        self.WEP_Scroll_Area_2 = QtWidgets.QScrollArea(self.centralwidget)
        self.WEP_Scroll_Area_2.setGeometry(QtCore.QRect(0, 460, 1001, 141))
        self.WEP_Scroll_Area_2.setWidgetResizable(True)
        self.WEP_Scroll_Area_2.setObjectName("WEP_Scroll_Area_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 999, 139))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.WEP_Scroll_Area_2.setWidget(self.scrollAreaWidgetContents_2)
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(50, 420, 161, 41))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(500, 430, 66, 19))
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(730, 430, 66, 19))
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(360, 370, 321, 41))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(1370, 160, 71, 19))
        self.label_12.setObjectName("label_12")
        self.WEP_Scroll_Area_3 = QtWidgets.QScrollArea(self.centralwidget)
        self.WEP_Scroll_Area_3.setGeometry(QtCore.QRect(1070, 190, 851, 141))
        self.WEP_Scroll_Area_3.setWidgetResizable(True)
        self.WEP_Scroll_Area_3.setObjectName("WEP_Scroll_Area_3")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 849, 139))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.WEP_Scroll_Area_3.setWidget(self.scrollAreaWidgetContents_3)
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(1150, 150, 161, 41))
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        self.label_14.setGeometry(QtCore.QRect(1600, 160, 66, 19))
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(1830, 160, 66, 19))
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.centralwidget)
        self.label_16.setGeometry(QtCore.QRect(1460, 100, 321, 41))
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(self.centralwidget)
        self.label_17.setGeometry(QtCore.QRect(1830, 440, 66, 19))
        self.label_17.setObjectName("label_17")
        self.WEP_Scroll_Area_4 = QtWidgets.QScrollArea(self.centralwidget)
        self.WEP_Scroll_Area_4.setGeometry(QtCore.QRect(1070, 470, 851, 141))
        self.WEP_Scroll_Area_4.setWidgetResizable(True)
        self.WEP_Scroll_Area_4.setObjectName("WEP_Scroll_Area_4")
        self.scrollAreaWidgetContents_4 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_4.setGeometry(QtCore.QRect(0, 0, 849, 139))
        self.scrollAreaWidgetContents_4.setObjectName("scrollAreaWidgetContents_4")
        self.WEP_Scroll_Area_4.setWidget(self.scrollAreaWidgetContents_4)
        self.label_18 = QtWidgets.QLabel(self.centralwidget)
        self.label_18.setGeometry(QtCore.QRect(1370, 440, 71, 19))
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(self.centralwidget)
        self.label_19.setGeometry(QtCore.QRect(1600, 440, 66, 19))
        self.label_19.setObjectName("label_19")
        self.label_20 = QtWidgets.QLabel(self.centralwidget)
        self.label_20.setGeometry(QtCore.QRect(1150, 430, 161, 41))
        self.label_20.setObjectName("label_20")
        self.label_21 = QtWidgets.QLabel(self.centralwidget)
        self.label_21.setGeometry(QtCore.QRect(1460, 380, 321, 41))
        self.label_21.setObjectName("label_21")
        self.label_22 = QtWidgets.QLabel(self.centralwidget)
        self.label_22.setGeometry(QtCore.QRect(120, 670, 611, 31))
        self.label_22.setObjectName("label_22")
        self.label_23 = QtWidgets.QLabel(self.centralwidget)
        self.label_23.setGeometry(QtCore.QRect(120, 710, 611, 31))
        self.label_23.setObjectName("label_23")
        self.label_24 = QtWidgets.QLabel(self.centralwidget)
        self.label_24.setGeometry(QtCore.QRect(120, 790, 611, 31))
        self.label_24.setObjectName("label_24")
        self.label_25 = QtWidgets.QLabel(self.centralwidget)
        self.label_25.setGeometry(QtCore.QRect(120, 750, 611, 31))
        self.label_25.setObjectName("label_25")
        self.label_26 = QtWidgets.QLabel(self.centralwidget)
        self.label_26.setGeometry(QtCore.QRect(120, 830, 611, 31))
        self.label_26.setObjectName("label_26")
        self.label_27 = QtWidgets.QLabel(self.centralwidget)
        self.label_27.setGeometry(QtCore.QRect(440, 0, 481, 31))
        self.label_27.setObjectName("label_27")
        self.label_27.setText("Please click the button below to choose CSV file")
        self.csv_button = QtWidgets.QPushButton(self.centralwidget)
        self.csv_button.setGeometry(QtCore.QRect(440, 30, 481, 27))
        self.csv_button.setObjectName("csv_input_button")
        self.csv_button.setText("Choose CSV File...")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1920, 24))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setEnabled(True)
        self.statusbar.setObjectName("statusbar")

        MainWindow.setStatusBar(self.statusbar)
        self.show()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def scan(self):

        if os.path.exists(self.csv_path):
            print("File is valid :) ")

        #else:
         #   self.QMessageBox.warning(self, "Warning", "Please choose a valid CSV file")

        self.vulnerability_search()
        self.get_results()
        self.clear_lists()


    def show_results(self):

          self.WEP_Scroll_Area


    def take_inputs(self):

        self.csv_path, done = QtWidgets.QInputDialog.getText(
            self, "CSV File", "Enter the path to csv file: "
        )

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Wigle-extract"))
        self.push_scan.setText(_translate("MainWindow", "Scan"))
        self.push_settings.setText(_translate("MainWindow", "Settings"))
        self.push_info.setText(_translate("MainWindow", "Info"))
        self.push_exit.setText(_translate("MainWindow", "Exit"))
        self.label_2.setText(_translate("MainWindow", "WEP Networks:"))
        self.label_3.setText(_translate("MainWindow", "Name"))
        self.label_4.setText(_translate("MainWindow", "GPS: Lat."))
        self.label_5.setText(_translate("MainWindow", "GPS: Lon."))
        self.label_6.setText(_translate("MainWindow", "MAC"))
        self.label_7.setText(_translate("MainWindow", "GPS: Lat."))
        self.label_8.setText(_translate("MainWindow", "Name"))
        self.label_9.setText(_translate("MainWindow", "GPS: Lon."))
        self.label_10.setText(_translate("MainWindow", "MAC"))
        self.label_11.setText(_translate("MainWindow", "WPA Networks:"))
        self.label_12.setText(_translate("MainWindow", "GPS: Lat."))
        self.label_13.setText(_translate("MainWindow", "Name"))
        self.label_14.setText(_translate("MainWindow", "GPS: Lon."))
        self.label_15.setText(_translate("MainWindow", "MAC"))
        self.label_16.setText(_translate("MainWindow", "o2 Networks:"))
        self.label_17.setText(_translate("MainWindow", "MAC"))
        self.label_18.setText(_translate("MainWindow", "GPS: Lat."))
        self.label_19.setText(_translate("MainWindow", "GPS: Lon."))
        self.label_20.setText(_translate("MainWindow", "Name"))
        self.label_21.setText(_translate("MainWindow", "TP-Link Networks:"))
        self.label_22.setText(_translate("MainWindow", f"WEP Networks: "))
        self.label_23.setText(_translate("MainWindow", "WPA Networks: "))
        self.label_24.setText(_translate("MainWindow", "o2 Networks: "))
        self.label_25.setText(_translate("MainWindow", "TP-Link Networks: "))
        self.label_26.setText(_translate("MainWindow", "Vulnerable networks: "))
        self.csv_button.clicked.connect(self.take_inputs)
        self.push_exit.clicked.connect(self.close)
        self.push_scan.clicked.connect(self.scan)


app = QtWidgets.QApplication(sys.argv)
app.setStyleSheet(qdarkstyle.load_stylesheet_pyqt5())
w = Ui_MainWindow()
sys.exit(app.exec_())